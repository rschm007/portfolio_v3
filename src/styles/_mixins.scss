// fonts
@mixin font($size: null, $color: null, $weight: null, $leading: null, $tracking: null, $family: null, $align: null, $decoration: null) {
    font-size: $size;
    color: $color;
    font-weight: $weight;
    line-height: $leading;
    letter-spacing: $tracking;
    font-family: $family;
    text-align: $align;
    text-decoration: $decoration;
}

// div sizing
@mixin width-height($width: null, $height: null, $minWidth: null, $maxWidth: null, $minHeight: null, $maxHeight: null) {
    width: $width;
    height: $height;
    min-width: $minWidth;
    max-width: $maxWidth;
    min-height: $minHeight;
    max-height: $maxHeight;
}

// flexbox classes
@mixin flex($direction: null, $wrap: null) {
    display: flex;
    flex-direction: $direction;
    flex-wrap: $wrap;

    @if $direction == center {
        align-items: center;
        justify-items: center;
    }
}

@mixin media($size, $up: false, $down: false) {
    @if $up {
        @media screen and (min-width: $size) {
            @content;
        }
    }
    @else {
        @media screen and (max-width: $size) {
            @content;
        }
    }
}

// borders & outlines
@mixin border-outline($borderWidth: null, $borderStyle: null, $borderColor: null, $noBorder: false, $noOutline: false) {
    border-width: $borderWidth;
    border-style: $borderStyle;
    border-color: $borderColor;

    @if $noBorder {
        border: none;
    }
    @else if $noOutline {
        outline: none;
    }
    @else {
        @error "border-outline";
    }
}

// transforms, translates, etc
@mixin transition($for: all, $time-in: 250ms, $type: ease-in-out, $time-out: 0s) {
    transition: $for $time-in $type $time-out;
    -moz-transition: $for $time-in $type $time-out;
    -webkit-transition: $for $time-in $type $time-out;
    -o-transition: $for $time-in $type $time-out;
}

@mixin transform($property) {
    -webkit-transform: $property;
    -ms-transform: $property;
    transform: $property;
}